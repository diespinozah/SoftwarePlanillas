<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>